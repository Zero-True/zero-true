name: Build and Push Images

on:
  pull_request:
    types: [opened, synchronize]
  release:
    types: [created]
permissions:
      id-token: write
      contents: read
jobs:
  build:
    name: Build Launch Images
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: "yarn"
        cache-dependency-path: "zt_frontend/yarn.lock"

    - name: Build Frontend Files
      run: |
        echo "Cleaning up old builds..."
        rm -rf zt_backend/dist_dev/ zt_backend/dist_app/
        echo "Building Frontend..."
        (cd zt_frontend && yarn install && yarn build && cp -r dist/ ../zt_backend/dist_dev/)
        (cd zt_frontend && yarn buildapp && cp -r dist/ ../zt_backend/dist_app/)
        (cd copilot && yarn install)
      shell: bash
  
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ secrets.AWS_REGION }}

    - name: "Build and push image via Kaniko"
      if: github.ref_type == 'tag'
      run: |
        docker run \
        -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
        -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
        -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \
        -v ${{ github.workspace }}:/workspace \
        gcr.io/kaniko-project/executor:latest \
        --dockerfile Dockerfile \
        --reproducible --cleanup --cache=true \
        --cache-repo ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}-cache \
        --destination=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:zero-true-${GITHUB_REF_NAME} \
        --context dir:///workspace/
