/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique id for a component
 */
export type Id = string;
/**
 * Optional variable name associated with a component
 */
export type VariableName = string;
/**
 * Vue component name
 */
export type Component = string;
/**
 * Current value of the rating
 */
export type Value = string | number;
/**
 * Number of rating icons
 */
export type Length = string | number;
/**
 * Provides visual feedback when hovering over icons
 */
export type Hover = boolean;
/**
 * Size of the rating icons
 */
export type Size = string | number;
/**
 * Color of the rating icons when active
 */
export type Color = string | null;
/**
 * The applied color when the component is in an active state
 */
export type ActiveColor = string | null;
/**
 * The icon displayed when empty
 */
export type EmptyIcon =
  | string
  | {
      [k: string]: unknown;
    };
/**
 * The icon displayed when full
 */
export type FullIcon =
  | string
  | {
      [k: string]: unknown;
    };
/**
 * Allows for half-increment ratings
 */
export type HalfIncrements = boolean;
/**
 * Allows the component to be cleared
 */
export type Clearable = boolean;
/**
 * Removes all hover effects and pointer events
 */
export type Readonly = boolean;
/**
 * Adjusts the vertical height used by the component
 */
export type Density = string;
/**
 * Removes the ability to click or target the component
 */
export type Disabled = boolean;
/**
 * Aria label for each item
 */
export type ItemAriaLabel = string;
/**
 * Position of item labels
 */
export type ItemLabelPosition = string;
/**
 * Array of labels to display next to each item
 */
export type ItemLabels = string[] | null;
/**
 * Sets the component's name attribute
 */
export type Name = string | null;
/**
 * Applies the v-ripple directive
 */
export type Ripple = boolean;
/**
 * Specify a custom tag used on the root element
 */
export type Tag = string;
/**
 * Specify a theme for this component and all of its children
 */
export type Theme = string | null;
/**
 * A label for your rating component
 */
export type Label = string | null;
/**
 * Trigger event for when to run the rating
 */
export type Triggerevent = string;

/**
 * A rating component that allows you to capture star-based input from a user
 */
export interface Rating {
  id: Id;
  variable_name?: VariableName;
  component?: Component;
  value?: Value;
  length?: Length;
  hover?: Hover;
  size?: Size;
  color?: Color;
  active_color?: ActiveColor;
  empty_icon?: EmptyIcon;
  full_icon?: FullIcon;
  half_increments?: HalfIncrements;
  clearable?: Clearable;
  readonly?: Readonly;
  density?: Density;
  disabled?: Disabled;
  item_aria_label?: ItemAriaLabel;
  item_label_position?: ItemLabelPosition;
  item_labels?: ItemLabels;
  name?: Name;
  ripple?: Ripple;
  tag?: Tag;
  theme?: Theme;
  label?: Label;
  triggerEvent?: Triggerevent;
  [k: string]: unknown;
}
